// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAuctions.Persistence.Context;

#nullable disable

namespace WebAuctions.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20231020151416_BidWhenCreating4")]
    partial class BidWhenCreating4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("WebAuctions.Persistence.AuctionDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Auctioneer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("OpeningPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ItemName");

                    b.ToTable("AuctionDBs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Auctioneer = "user",
                            EndDate = new DateTime(2023, 10, 20, 17, 14, 16, 368, DateTimeKind.Local).AddTicks(2600),
                            ItemName = "Large Tent",
                            OpeningPrice = 5000.5
                        });
                });

            modelBuilder.Entity("WebAuctions.Persistence.BidDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("AuctionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bidder")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.ToTable("BidDBs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Amount = 500000.0,
                            AuctionId = -1,
                            Bidder = "Samuel",
                            Date = new DateTime(2023, 10, 20, 17, 14, 16, 368, DateTimeKind.Local).AddTicks(3280)
                        },
                        new
                        {
                            Id = -2,
                            Amount = 10000000.0,
                            AuctionId = -1,
                            Bidder = "Esteban",
                            Date = new DateTime(2023, 10, 20, 17, 14, 16, 368, DateTimeKind.Local).AddTicks(3290)
                        });
                });

            modelBuilder.Entity("WebAuctions.Persistence.ItemDB", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("ItemDBs");

                    b.HasData(
                        new
                        {
                            Name = "Large Tent",
                            Description = "A Large Tent",
                            Picture = "images/tent1.png"
                        });
                });

            modelBuilder.Entity("WebAuctions.Persistence.AuctionDB", b =>
                {
                    b.HasOne("WebAuctions.Persistence.ItemDB", "Item")
                        .WithMany()
                        .HasForeignKey("ItemName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("WebAuctions.Persistence.BidDB", b =>
                {
                    b.HasOne("WebAuctions.Persistence.AuctionDB", "AuctionDB")
                        .WithMany("BidDBs")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuctionDB");
                });

            modelBuilder.Entity("WebAuctions.Persistence.AuctionDB", b =>
                {
                    b.Navigation("BidDBs");
                });
#pragma warning restore 612, 618
        }
    }
}
